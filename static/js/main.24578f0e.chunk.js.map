{"version":3,"sources":["constants/actions.js","constants/utils.js","reducers/window.reducer.js","reducers/index.js","utils/store.js","utils/style.js","components/StartBar/style.js","components/LogoIcon/style.js","components/LogoIcon/index.js","components/LinksMenu/style.js","components/LinksMenu/index.js","components/WorksMenu/style.js","components/WorksMenu/index.js","components/StartBarMenu/style.js","components/StartBarMenu/index.js","actions/window.action.js","selectors/window.selector.js","components/StartBar/index.js","containers/AboutMeWindow/style.js","containers/AboutMeWindow/index.js","containers/ExperienceWindow/style.js","containers/ExperienceWindow/index.js","components/Popup/style.js","components/Popup/index.js","containers/ShutdownPopup/index.js","containers/MainScreen/index.js","containers/MainScreen/style.js","pages/IndexPage/index.js","App.js","serviceWorker.js","index.js"],"names":["WINDOW","SET_ACTIVE_WINDOW","SET_EXPERIENCE_WINDOW_VISIBILITY","SET_EXPERIENCE_WINDOW_MINIMIZE","SET_EDUCATION_WINDOW_VISIBILITY","SET_EDUCATION_WINDOW_MINIMIZE","SET_ABOUT_ME_WINDOW_VISIBILITY","SET_ABOUT_ME_WINDOW_MINIMIZE","SET_LINKS_WINDOW_VISIBILITY","SET_LINKS_WINDOW_MINIMIZE","SET_SHUTDOWN_POPUP_VISIBILITY","MINIMIZE_ALL_EXCEPT","WINDOW_NAME","EXPERIENCE","EDUCATION","ABOUT_ME","LINKS","SHUTDOWN","WINDOW_VARIABLES","initialState","active","utils","show","minimize","rootReducer","combineReducers","window","state","action","type","actions","payload","isVisible","isMinimized","windowName","composeEnhancers","compose","store","createStore","GlobalStyle","createGlobalStyle","reset","style","makeStyles","appbar","top","zIndex","startMenuDivider","marginLeft","marginRight","marginTop","menu","display","alignItems","startMenu","flexGrow","startMenuButtons","fontWeight","clockButton","icon","height","paddingRight","iconImage","width","LogoIcon","image","alt","size","classes","styleObj","className","src","startMenuStyle","left","bottom","position","menuItem","LinksMenu","props","linksMenuOpen","setLinksMenuOpen","horizontalAlign","verticalAlign","open","onClick","as","href","target","WorksMenu","worksMenuOpen","setWorksMenuOpen","subMenuItem","subMenuIcon","right","StartBarMenu","setExperienceWindowVisibility","setAboutMeWindowVisibility","setShutdownPopupVisibility","menuOpen","setMenuOpen","useState","onMouseOver","setActiveWindow","setExperienceWindowMinimize","setEducationWindowVisibility","setEducationWindowMinimize","setAboutMeWindowMinimize","setLinksWindowVisibility","setLinksWindowMinimize","minimizeAllExcept","selectActiveWindowState","selectExperienceWindowState","experience","selectEducationWindowState","education","selectAboutMeWindowState","aboutme","selectLinksWindowState","links","selectShutdownPopupState","shutdown","getActiveWindow","createSelector","activeWindow","showExperienceWindow","experienceWindow","minimizeExperienceWindow","showEducationWindow","educationWindow","minimizeEducationWindow","showAboutMeWindow","aboutMeWindow","minimizeAboutMeWindow","showLinksWindow","linksWindow","minimizeLinksWindow","showShutdownPopup","shutdownPopup","mapStateToProps","createStructuredSelector","windowSelector","connect","dispatch","windowAction","React","Date","toLocaleString","hour","minute","hour12","currentTime","setTime","useEffect","timer","setInterval","clearInterval","vertical","breakpoint","minimizedScreen","maximizedScreen","transform","headerArea","justifyContent","cursor","actionButtons","margin","aboutMe","fontFamily","fontSize","lineHeight","paragraph","fullWindow","setFullWindow","defaultClassName","clsx","bounds","handle","defaultPosition","x","y","square","boldText","descriptionArea","marginBottom","titleArea","title","subtitle","explanationArea","Recruiterbox","readOnly","checked","label","value","Basis","QBurst","HashInfinity","activeTab","setActiveTab","onChange","screen","header","headerButton","content","Popup","handleClose","setShowDown","shutdownAction","setTimeout","close","padding","withStyles","mainScreen","background","textAlign","this","Component","IndexPage","App","reduxStore","theme","themes","default","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24578f0e.chunk.js","sourcesContent":["export const WINDOW = {\n  SET_ACTIVE_WINDOW: 'cn/Window/SET_ACTIVE_WINDOW',\n  SET_EXPERIENCE_WINDOW_VISIBILITY:\n    'cn/Window/SET_EXPERIENCE_WINDOW_VISIBILITY',\n  SET_EXPERIENCE_WINDOW_MINIMIZE: 'cn/Window/SET_EXPERIENCE_WINDOW_MINIMIZE',\n  SET_EDUCATION_WINDOW_VISIBILITY: 'cn/Window/SET_EDUCATION_WINDOW_VISIBILITY',\n  SET_EDUCATION_WINDOW_MINIMIZE: 'cn/Window/SET_EDUCATION_WINDOW_MINIMIZE',\n  SET_ABOUT_ME_WINDOW_VISIBILITY: 'cn/Window/SET_ABOUT_ME_WINDOW_VISIBILITY',\n  SET_ABOUT_ME_WINDOW_MINIMIZE: 'cn/Window/SET_ABOUT_ME_WINDOW_MINIMIZE',\n  SET_LINKS_WINDOW_VISIBILITY: 'cn/Window/SET_LINKS_WINDOW_VISIBILITY',\n  SET_LINKS_WINDOW_MINIMIZE: 'cn/Window/SET_LINKS_WINDOW_MINIMIZE',\n  SET_SHUTDOWN_POPUP_VISIBILITY: 'cn/Window/SET_SHUTDOWN_POPUP_VISIBILITY',\n  MINIMIZE_ALL_EXCEPT: 'cn/Window/MINIMIZE_ALL_EXCEPT',\n};\n","export const WINDOW_NAME = {\n  EXPERIENCE: 'EXPERIENCE',\n  EDUCATION: 'EDUCATION',\n  ABOUT_ME: 'ABOUT_ME',\n  LINKS: 'LINKS',\n  SHUTDOWN: 'SHUTDOWN',\n};\n\nexport const WINDOW_VARIABLES = {\n  EXPERIENCE: 'experience',\n  EDUCATION: 'education',\n  ABOUT_ME: 'aboutme',\n  LINKS: 'links',\n  SHUTDOWN: 'shutdown',\n};\n","import { actions, utils } from '../constants';\n\nconst initialState = {\n  active: null,\n  [utils.WINDOW_VARIABLES.EXPERIENCE]: {\n    show: false,\n    minimize: false,\n  },\n  [utils.WINDOW_VARIABLES.EDUCATION]: {\n    show: false,\n    minimize: false,\n  },\n  [utils.WINDOW_VARIABLES.ABOUT_ME]: {\n    show: false,\n    minimize: false,\n  },\n  [utils.WINDOW_VARIABLES.LINKS]: {\n    show: false,\n    minimize: false,\n  },\n  [utils.WINDOW_VARIABLES.SHUTDOWN]: {\n    show: false,\n  },\n};\n\nexport default function windowReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.WINDOW.SET_ACTIVE_WINDOW:\n      return {\n        ...state,\n        active: action.payload.window,\n      };\n\n    case actions.WINDOW.SET_EXPERIENCE_WINDOW_VISIBILITY:\n      return {\n        ...state,\n        active: utils.WINDOW_NAME.EXPERIENCE,\n        [utils.WINDOW_VARIABLES.EXPERIENCE]: {\n          ...state[utils.WINDOW_VARIABLES.EXPERIENCE],\n          show: action.payload.isVisible,\n          minimize: false,\n        },\n      };\n\n    case actions.WINDOW.SET_EXPERIENCE_WINDOW_MINIMIZE:\n      return {\n        ...state,\n        [utils.WINDOW_VARIABLES.EXPERIENCE]: {\n          ...state[utils.WINDOW_VARIABLES.EXPERIENCE],\n          minimize: action.payload.isMinimized,\n        },\n      };\n\n    case actions.WINDOW.SET_EDUCATION_WINDOW_VISIBILITY:\n      return {\n        ...state,\n        active: utils.WINDOW_NAME.EDUCATION,\n        [utils.WINDOW_VARIABLES.EDUCATION]: {\n          ...state[utils.WINDOW_VARIABLES.EDUCATION],\n          show: action.payload.isVisible,\n          minimize: false,\n        },\n      };\n\n    case actions.WINDOW.SET_EDUCATION_WINDOW_MINIMIZE:\n      return {\n        ...state,\n        [utils.WINDOW_VARIABLES.EDUCATION]: {\n          ...state[utils.WINDOW_VARIABLES.EDUCATION],\n          minimize: action.payload.isMinimized,\n        },\n      };\n\n    case actions.WINDOW.SET_ABOUT_ME_WINDOW_VISIBILITY:\n      return {\n        ...state,\n        active: utils.WINDOW_NAME.ABOUT_ME,\n        [utils.WINDOW_VARIABLES.ABOUT_ME]: {\n          ...state[utils.WINDOW_VARIABLES.ABOUT_ME],\n          show: action.payload.isVisible,\n          minimize: false,\n        },\n      };\n\n    case actions.WINDOW.SET_ABOUT_ME_WINDOW_MINIMIZE:\n      return {\n        ...state,\n        [utils.WINDOW_VARIABLES.ABOUT_ME]: {\n          ...state[utils.WINDOW_VARIABLES.ABOUT_ME],\n          minimize: action.payload.isMinimized,\n        },\n      };\n\n    case actions.WINDOW.SET_LINKS_WINDOW_VISIBILITY:\n      return {\n        ...state,\n        active: utils.WINDOW_NAME.LINKS,\n        [utils.WINDOW_VARIABLES.LINKS]: {\n          ...state[utils.WINDOW_VARIABLES.LINKS],\n          show: action.payload.isVisible,\n          minimize: false,\n        },\n      };\n\n    case actions.WINDOW.SET_LINKS_WINDOW_MINIMIZE:\n      return {\n        ...state,\n        [utils.WINDOW_VARIABLES.LINKS]: {\n          ...state[utils.WINDOW_VARIABLES.LINKS],\n          minimize: action.payload.isMinimized,\n        },\n      };\n\n    case actions.WINDOW.SET_SHUTDOWN_POPUP_VISIBILITY:\n      return {\n        ...state,\n        active: utils.WINDOW_NAME.SHUTDOWN,\n        [utils.WINDOW_VARIABLES.SHUTDOWN]: {\n          ...state[utils.WINDOW_VARIABLES.SHUTDOWN],\n          show: action.payload.isVisible,\n        },\n      };\n\n    case actions.WINDOW.MINIMIZE_ALL_EXCEPT:\n      return {\n        ...state,\n        [utils.WINDOW_VARIABLES.EXPERIENCE]: {\n          ...state[utils.WINDOW_VARIABLES.EXPERIENCE],\n          minimize: true,\n        },\n        [utils.WINDOW_VARIABLES.EDUCATION]: {\n          ...state[utils.WINDOW_VARIABLES.EDUCATION],\n          minimize: true,\n        },\n        [utils.WINDOW_VARIABLES.ABOUT_ME]: {\n          ...state[utils.WINDOW_VARIABLES.ABOUT_ME],\n          minimize: true,\n        },\n        [utils.WINDOW_VARIABLES.LINKS]: {\n          ...state[utils.WINDOW_VARIABLES.LINKS],\n          minimize: true,\n        },\n        [action.payload.windowName]: {\n          ...state[action.payload.windowName],\n          minimize: false,\n        },\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport windowReducer from './window.reducer';\n\nconst rootReducer = combineReducers({\n  window: windowReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose } from 'redux';\n\nimport rootReducer from '../reducers';\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst store = createStore(rootReducer, composeEnhancers());\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\nimport { reset } from 'react95';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n`;\n\nexport default GlobalStyle;\n","import { makeStyles } from '@material-ui/styles';\n\nconst style = makeStyles({\n  appbar: {\n    top: 'calc(100% - 45px)!important',\n    zIndex: 2,\n  },\n  startMenuDivider: {\n    marginLeft: '10px',\n    marginRight: '5px',\n    marginTop: '-4px',\n  },\n  menu: {\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n  startMenu: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  startMenuButtons: {\n    fontWeight: 'bold',\n  },\n  clockButton: {\n    display: 'flex',\n    fontWeight: 'bold',\n    marginTop: '-4px',\n  },\n});\n\nexport default style;\n","import { makeStyles } from '@material-ui/styles';\n\nconst style = makeStyles({\n  icon: {\n    display: 'inline-block',\n    height: '20px',\n    paddingRight: '8px',\n  },\n  iconImage: {\n    height: '100%',\n    width: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport style from './style';\n\nconst LogoIcon = ({ image, alt, size }) => {\n  const classes = style();\n\n  const styleObj = size ? { height: size } : {};\n\n  return (\n    <span className={classes.icon} style={styleObj}>\n      <img className={classes.iconImage} src={image} alt={alt} />\n    </span>\n  );\n};\n\nexport default LogoIcon;\n","import { makeStyles } from '@material-ui/styles';\n\nconst style = makeStyles({\n  startMenuStyle: {\n    left: 170,\n    bottom: 50,\n    position: 'relative',\n    display: 'inline-block',\n  },\n  menu: {\n    width: 170,\n  },\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      fontWeight: 'bolder',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport { List, ListItem } from 'react95';\n\nimport LogoIcon from '../LogoIcon';\n\nimport style from './style';\n\nconst LinksMenu = props => {\n  const {\n    linksMenuOpen,\n    setLinksMenuOpen,\n  } = props;\n\n  const classes = style();\n\n  return (\n    <>\n      <div className={classes.startMenuStyle}>\n        {linksMenuOpen && (\n          <List\n            className={classes.menu}\n            horizontalAlign=\"left\"\n            verticalAlign=\"top\"\n            open={linksMenuOpen}\n            onClick={() => setLinksMenuOpen(false)}\n          >\n\n            <ListItem as=\"a\" href=\"https://github.com/bharadhwaj\" target=\"_blank\" className={classes.menuItem}>\n              <span style={{marginTop: 15}}><LogoIcon image=\"/icons/github.png\" alt=\"\" size={30} /></span>\n              Github\n            </ListItem>\n\n            <ListItem as=\"a\"  href=\"https://stackoverflow.com/users/3978238/bharadhwaj\" target=\"_blank\" className={classes.menuItem}>\n              <span style={{marginTop: 10}}><LogoIcon image=\"/icons/stackoverflow.svg\" alt=\"\" size={22} /></span>\n              Stackoverflow\n            </ListItem>\n\n            <ListItem as=\"a\"  href=\"https://www.linkedin.com/in/bharadhwaj\" target=\"_blank\" className={classes.menuItem}>\n              <span style={{marginTop: 15}}><LogoIcon image=\"/icons/linkedin.png\" alt=\"\" size={30} /></span>\n              LinkedIn\n            </ListItem>\n\n            <ListItem as=\"a\" href=\"https://angel.co/u/bharadhwajcn\" target=\"_blank\" className={classes.menuItem}>\n              <span style={{marginTop: 15}}><LogoIcon image=\"/icons/angellist.png\" alt=\"\" size={25} /></span>\n              AngelList\n            </ListItem>\n\n            <ListItem as=\"a\" href=\"https://www.visualcv.com/bharadhwaj\" target=\"_blank\" className={classes.menuItem}>\n              <span style={{marginTop: 10}}><LogoIcon image=\"/icons/resume.png\" alt=\"\" size={22} /></span>\n              Resume\n            </ListItem>\n\n          </List>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LinksMenu;\n","import { makeStyles } from '@material-ui/styles';\n\nconst style = makeStyles({\n  startMenuStyle: {\n    left: 170,\n    bottom: 50,\n    position: 'relative',\n    display: 'inline-block',\n  },\n  menu: {\n    width: 200,\n  },\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      fontWeight: 'bolder',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport { List, ListItem } from 'react95';\n\nimport style from './style';\n\nconst WorksMenu = props => {\n  const {\n    worksMenuOpen,\n    setWorksMenuOpen,\n  } = props;\n\n  const classes = style();\n\n  return (\n    <>\n      <div className={classes.startMenuStyle}>\n        {worksMenuOpen && (\n          <List\n            className={classes.menu}\n            horizontalAlign=\"left\"\n            verticalAlign=\"top\"\n            open={worksMenuOpen}\n            onClick={() => setWorksMenuOpen(false)}\n          >\n\n            <ListItem as=\"a\" href=\"https://bingewatchersguide.online/\" target=\"_blank\" className={classes.menuItem}>\n              Binge Watcher's Guide\n            </ListItem>\n\n            <ListItem as=\"a\"  href=\"https://fubar-charts.bharadhwajcn.com/\" target=\"_blank\" className={classes.menuItem}>\n              Fubar Charts\n            </ListItem>\n\n            <ListItem as=\"a\"  href=\"https://app.getbasis.co/\" target=\"_blank\" className={classes.menuItem}>\n              Basis\n            </ListItem>\n\n            <ListItem as=\"a\" href=\"https://www.qburst.com/products/automate/\" target=\"_blank\" className={classes.menuItem}>\n              Automate\n            </ListItem>\n\n            <ListItem as=\"a\" href=\"https://www.github.com/bharadhwaj\" target=\"_blank\" className={classes.menuItem}>\n              More on Github...\n            </ListItem>\n\n          </List>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default WorksMenu;\n","import { makeStyles } from '@material-ui/styles';\n\nconst style = makeStyles({\n  startMenuStyle: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  menu: {\n    width: 170,\n  },\n  menuItem: {\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      fontWeight: 'bolder',\n    },\n  },\n  subMenuItem: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      fontWeight: 'bolder',\n    },\n  },\n  subMenuIcon: {\n    position:'absolute',\n    right: 15\n  }\n});\n\nexport default style;\n","import React, { useState } from 'react';\nimport { Divider, List, ListItem } from 'react95';\n\nimport LinksMenu from \"../LinksMenu\";\nimport WorksMenu from \"../WorksMenu\";\n\nimport LogoIcon from '../LogoIcon';\n\nimport style from './style';\n\nconst StartBarMenu = props => {\n  const {\n    setExperienceWindowVisibility,\n    setAboutMeWindowVisibility,\n    setShutdownPopupVisibility,\n    menuOpen,\n    setMenuOpen,\n  } = props;\n\n  const classes = style();\n\n  const [linksMenuOpen, setLinksMenuOpen] = useState(false);\n  const [worksMenuOpen, setWorksMenuOpen] = useState(false);\n\n  return (\n    <>\n      <LinksMenu\n          linksMenuOpen={menuOpen && linksMenuOpen}\n          setLinksMenuOpen={setLinksMenuOpen}\n          onMouseOver={()=>setLinksMenuOpen(true)}\n      />\n\n      <WorksMenu\n          worksMenuOpen={menuOpen && worksMenuOpen}\n          setWorksMenuOpen={menuOpen && setWorksMenuOpen}\n          onMouseOver={()=>setWorksMenuOpen(true)}\n      />\n      <div className={classes.startMenuStyle}>\n        {menuOpen && (\n          <List\n            className={classes.menu}\n            horizontalAlign=\"left\"\n            verticalAlign=\"top\"\n            open={menuOpen}\n          >\n            <ListItem\n              className={classes.menuItem}\n              onMouseOver={() => {setWorksMenuOpen(false); setLinksMenuOpen(false); }}\n              onClick={() => { setMenuOpen(false); setExperienceWindowVisibility(true);}}\n            >\n              <LogoIcon image=\"/icons/experience-computer.png\" alt=\"\" size={30} />\n              Experience\n            </ListItem>\n\n            <ListItem\n              className={classes.subMenuItem}\n              onMouseOver={() => { setWorksMenuOpen(true); setLinksMenuOpen(false);}}\n              style={{marginLeft: -7}}\n            >\n              <LogoIcon image=\"/icons/folder.png\" alt=\"\" size={40}/>\n              Works\n              <span className={classes.subMenuIcon}>\n               ▸\n              </span>\n            </ListItem>\n\n            <ListItem\n              className={classes.menuItem}\n              onMouseOver={() => {setWorksMenuOpen(false); setLinksMenuOpen(false); }}\n              onClick={() => { setMenuOpen(false); setAboutMeWindowVisibility(true);}}\n            >\n              <LogoIcon image=\"/icons/notepad.png\" alt=\"\" size={25} />\n              About Me\n            </ListItem>\n\n           <ListItem\n              className={classes.subMenuItem}\n              onMouseOver={() => {setWorksMenuOpen(false); setLinksMenuOpen(true); }}\n           >\n             <LogoIcon image=\"/icons/globe.png\" alt=\"\" size={30} />\n              Links\n               <span className={classes.subMenuIcon}>\n               ▸\n              </span>\n            </ListItem>\n\n            <Divider />\n\n            <ListItem\n              className={classes.menuItem}\n              onMouseOver={() => {setWorksMenuOpen(false); setLinksMenuOpen(false); }}\n              onClick={() => { setMenuOpen(false); setShutdownPopupVisibility(true);}}\n            >\n              <LogoIcon image=\"/icons/shutdown-computer.png\" alt=\"\" size={30} />\n              Shutdown\n            </ListItem>\n          </List>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default StartBarMenu;\n","import { actions } from '../constants';\n\nexport const setActiveWindow = (window) => ({\n  type: actions.WINDOW.SET_ACTIVE_WINDOW,\n  payload: { window },\n});\n\nexport const setExperienceWindowVisibility = (isVisible) => ({\n  type: actions.WINDOW.SET_EXPERIENCE_WINDOW_VISIBILITY,\n  payload: { isVisible },\n});\n\nexport const setExperienceWindowMinimize = (isMinimized) => ({\n  type: actions.WINDOW.SET_EXPERIENCE_WINDOW_MINIMIZE,\n  payload: { isMinimized },\n});\n\nexport const setEducationWindowVisibility = (isVisible) => ({\n  type: actions.WINDOW.SET_EDUCATION_WINDOW_VISIBILITY,\n  payload: { isVisible },\n});\n\nexport const setEducationWindowMinimize = (isMinimized) => ({\n  type: actions.WINDOW.SET_EDUCATION_WINDOW_MINIMIZE,\n  payload: { isMinimized },\n});\n\nexport const setAboutMeWindowVisibility = (isVisible) => ({\n  type: actions.WINDOW.SET_ABOUT_ME_WINDOW_VISIBILITY,\n  payload: { isVisible },\n});\n\nexport const setAboutMeWindowMinimize = (isMinimized) => ({\n  type: actions.WINDOW.SET_ABOUT_ME_WINDOW_MINIMIZE,\n  payload: { isMinimized },\n});\n\nexport const setLinksWindowVisibility = (isVisible) => ({\n  type: actions.WINDOW.SET_LINKS_WINDOW_VISIBILITY,\n  payload: { isVisible },\n});\n\nexport const setLinksWindowMinimize = (isMinimized) => ({\n  type: actions.WINDOW.SET_LINKS_WINDOW_MINIMIZE,\n  payload: { isMinimized },\n});\n\nexport const setShutdownPopupVisibility = (isVisible) => ({\n  type: actions.WINDOW.SET_SHUTDOWN_POPUP_VISIBILITY,\n  payload: { isVisible },\n});\n\nexport const minimizeAllExcept = (windowName) => ({\n  type: actions.WINDOW.MINIMIZE_ALL_EXCEPT,\n  payload: { windowName },\n});\n","import { createSelector } from 'reselect';\n\nconst selectActiveWindowState = state => state.window.active;\nconst selectExperienceWindowState = state => state.window.experience;\nconst selectEducationWindowState = state => state.window.education;\nconst selectAboutMeWindowState = state => state.window.aboutme;\nconst selectLinksWindowState = state => state.window.links;\nconst selectShutdownPopupState = state => state.window.shutdown;\n\nexport const getActiveWindow = () =>\n  createSelector(selectActiveWindowState, activeWindow => activeWindow);\n\nexport const showExperienceWindow = () =>\n  createSelector(\n    selectExperienceWindowState,\n    experienceWindow => experienceWindow.show\n  );\n\nexport const minimizeExperienceWindow = () =>\n  createSelector(\n    selectExperienceWindowState,\n    experienceWindow => experienceWindow.minimize\n  );\n\nexport const showEducationWindow = () =>\n  createSelector(\n    selectEducationWindowState,\n    educationWindow => educationWindow.show\n  );\n\nexport const minimizeEducationWindow = () =>\n  createSelector(\n    selectEducationWindowState,\n    educationWindow => educationWindow.minimize\n  );\n\nexport const showAboutMeWindow = () =>\n  createSelector(selectAboutMeWindowState, aboutMeWindow => aboutMeWindow.show);\n\nexport const minimizeAboutMeWindow = () =>\n  createSelector(\n    selectAboutMeWindowState,\n    aboutMeWindow => aboutMeWindow.minimize\n  );\n\nexport const showLinksWindow = () =>\n  createSelector(selectLinksWindowState, linksWindow => linksWindow.show);\n\nexport const minimizeLinksWindow = () =>\n  createSelector(selectLinksWindowState, linksWindow => linksWindow.minimize);\n\nexport const showShutdownPopup = () =>\n  createSelector(selectShutdownPopupState, shutdownPopup => shutdownPopup.show);\n","import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { AppBar, Bar, Button, Toolbar } from 'react95';\n\nimport style from './style';\n\nimport LogoIcon from '../LogoIcon';\nimport StartBarMenu from '../StartBarMenu';\n\nimport { windowAction } from '../../actions';\nimport { windowSelector } from '../../selectors';\n\nconst StartBar = props => {\n  const {\n    setExperienceWindowMinimize,\n    showExperienceWindow,\n    minimizeExperienceWindow,\n    setAboutMeWindowMinimize,\n    showAboutMeWindow,\n    minimizeAboutMeWindow,\n  } = props;\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const [currentTime, setTime] = React.useState(\n    new Date().toLocaleString('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    })\n  );\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(\n        new Date().toLocaleString('en-US', {\n          hour: 'numeric',\n          minute: 'numeric',\n          hour12: true,\n        })\n      );\n    }, 10000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const classes = style();\n\n  return (\n    <>\n      <AppBar className={classes.appbar}>\n        <Toolbar>\n          <div className={classes.startMenu}>\n            <StartBarMenu\n              menuOpen={menuOpen}\n              setMenuOpen={setMenuOpen}\n              {...props}\n            />\n            <Button\n              onClick={() => setMenuOpen(!menuOpen)}\n              active={menuOpen}\n              style={{ fontWeight: 'bold' }}\n            >\n              <LogoIcon image=\"/icons/start-icon.png\" alt=\"\" />\n              Start\n            </Button>\n\n            <Bar className={classes.startMenuDivider} vertical size=\"lg\" />\n\n            {showExperienceWindow && (\n              <Button\n                onClick={() =>\n                  setExperienceWindowMinimize(!minimizeExperienceWindow)\n                }\n                active={!minimizeExperienceWindow}\n                style={{ fontWeight: 'bold' }}\n              >\n                <LogoIcon image=\"/icons/app.png\" alt=\"\" />\n                experience.exe\n              </Button>\n            )}\n\n            {showAboutMeWindow && (\n              <Button\n                onClick={() => setAboutMeWindowMinimize(!minimizeAboutMeWindow)}\n                active={!minimizeAboutMeWindow}\n                style={{ fontWeight: 'bold' }}\n              >\n                <LogoIcon image=\"/icons/app.png\" alt=\"\" />\n                about_me.exe\n              </Button>\n            )}\n          </div>\n          <div className={classes.clockButton}>\n            <Button active style={{ fontWeight: 'bold' }}>\n              {currentTime}\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  showExperienceWindow: windowSelector.showExperienceWindow(),\n  minimizeExperienceWindow: windowSelector.minimizeExperienceWindow(),\n  showEducationWindow: windowSelector.showEducationWindow(),\n  minimizeEducationWindow: windowSelector.minimizeEducationWindow(),\n  showAboutMeWindow: windowSelector.showAboutMeWindow(),\n  minimizeAboutMeWindow: windowSelector.minimizeAboutMeWindow(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setExperienceWindowVisibility: isVisible => {\n    return dispatch(windowAction.setExperienceWindowVisibility(isVisible));\n  },\n  setExperienceWindowMinimize: isMinimized => {\n    return dispatch(windowAction.setExperienceWindowMinimize(isMinimized));\n  },\n  setEducationWindowVisibility: isVisible => {\n    return dispatch(windowAction.setEducationWindowVisibility(isVisible));\n  },\n  setEducationWindowMinimize: isMinimized => {\n    return dispatch(windowAction.setEducationWindowMinimize(isMinimized));\n  },\n  setAboutMeWindowVisibility: isVisible => {\n    return dispatch(windowAction.setAboutMeWindowVisibility(isVisible));\n  },\n  setAboutMeWindowMinimize: isMinimized => {\n    return dispatch(windowAction.setAboutMeWindowMinimize(isMinimized));\n  },\n  setShutdownPopupVisibility: isVisible => {\n    return dispatch(windowAction.setShutdownPopupVisibility(isVisible));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartBar);\n","import { makeStyles } from '@material-ui/styles';\n\nconst breakpoint = { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 };\n\nconst style = makeStyles({\n  minimizedScreen: {\n    width: '40%',\n    [`@media (max-width:${breakpoint['md']}px)`]: {\n      width: '60%',\n    },\n    [`@media (max-width:${breakpoint['sm']}px)`]: {\n      width: '70%',\n    },\n  },\n  activeWindow: {\n    zIndex: 1,\n  },\n  maximizedScreen: {\n    width: '100%',\n    height: '100%',\n    transform: 'translate(0px, 0px)!important',\n  },\n  headerArea: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    cursor: 'move',\n  },\n  actionButtons: {\n    margin: '1px 2px',\n    fontWeight: 'bold',\n    transform: 'translateY(-1px)',\n  },\n  aboutMe: {\n    fontFamily: 'monospace, monospace',\n    fontSize: 14,\n    lineHeight: 1.5,\n  },\n  paragraph: {\n    marginTop: 20,\n  }\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  Button,\n  Fieldset,\n  Window,\n  WindowContent,\n  WindowHeader,\n} from 'react95';\nimport Draggable from 'react-draggable';\n\nimport style from './style';\n\nimport { windowAction } from '../../actions';\nimport { utils } from '../../constants';\nimport { windowSelector } from '../../selectors';\n\nconst AboutMeWindow = (props) => {\n  const {\n    setAboutMeWindowVisibility,\n    setAboutMeWindowMinimize,\n    setActiveWindow,\n    minimizeAllExcept,\n    showAboutMeWindow,\n    minimizeAboutMeWindow,\n    activeWindow,\n  } = props;\n\n  const classes = style();\n\n  const [fullWindow, setFullWindow] = React.useState(false);\n\n  return (\n    <>\n      {!minimizeAboutMeWindow && showAboutMeWindow && (\n        <Draggable\n          defaultClassName={clsx(\n            activeWindow === utils.WINDOW_NAME.ABOUT_ME && classes.activeWindow\n          )}\n          bounds=\"parent\"\n          handle=\"header\"\n          defaultPosition={{ x: 20, y: 40 }}\n        >\n          <Window\n            className={clsx(\n              fullWindow ? classes.maximizedScreen : classes.minimizedScreen\n            )}\n            onClick={() => setActiveWindow(utils.WINDOW_NAME.ABOUT_ME)}\n          >\n            <header>\n              <WindowHeader className={classes.headerArea}>\n                <div>\n                  <span>about_me.exe</span>\n                </div>\n                <div>\n                  <Button\n                    className={classes.actionButtons}\n                    size={'sm'}\n                    square\n                    onClick={() =>\n                      setAboutMeWindowMinimize(!minimizeAboutMeWindow)\n                    }\n                  >\n                    <span>-</span>\n                  </Button>\n                  <Button\n                    className={classes.actionButtons}\n                    size={'sm'}\n                    square\n                    onClick={() => {\n                      minimizeAllExcept(utils.WINDOW_VARIABLES.ABOUT_ME);\n                      setFullWindow(!fullWindow);\n                      return;\n                    }}\n                  >\n                    <span>□</span>\n                  </Button>\n                  <Button\n                    className={classes.actionButtons}\n                    size={'sm'}\n                    square\n                    onClick={() => setAboutMeWindowVisibility(false)}\n                  >\n                    <span>x</span>\n                  </Button>\n                </div>\n              </WindowHeader>\n            </header>\n            <WindowContent >\n              <Fieldset className={classes.aboutMe} >\n                <div className={classes.paragraph}>\n                  Hey there. This is Bharadhwaj, from Palakkad, God's own country - Kerala.\n                  I'm a passionate web developer, programmer and a B.Tech graduate in Computer Science and Engineering.\n                  I am passionate about Technology, Entrepreneurship and Startup.\n                </div>\n                <div className={classes.paragraph}>\n                  Currently, I am living in Bangalore, working for Applied Training, a Talent Management platform,\n                  where I am trying to integrate multiple products of Applied under a single hood. My day to day work\n                  mostly consist of coding in Python Django and React.js.\n                </div>\n                <div className={classes.paragraph}>\n                  If not at Work and if not sleeping, I spend time travelling and exploring new places.\n                  I follow Sports especially Cricket and Football and love to play outdoor games(even though I suck at most of them).\n                </div>\n              </Fieldset>\n            </WindowContent>\n          </Window>\n        </Draggable>\n      )}\n    </>\n  );\n};\n\n\nconst mapStateToProps = createStructuredSelector({\n  activeWindow: windowSelector.getActiveWindow(),\n  showAboutMeWindow: windowSelector.showAboutMeWindow(),\n  minimizeAboutMeWindow: windowSelector.minimizeAboutMeWindow(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAboutMeWindowVisibility: (isVisible) => {\n    return dispatch(windowAction.setAboutMeWindowVisibility(isVisible));\n  },\n  setAboutMeWindowMinimize: (isMinimized) => {\n    return dispatch(windowAction.setAboutMeWindowMinimize(isMinimized));\n  },\n  setActiveWindow: (window) => {\n    return dispatch(windowAction.setActiveWindow(window));\n  },\n  minimizeAllExcept: (windowName) => {\n    return dispatch(windowAction.minimizeAllExcept(windowName));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutMeWindow);\n","import { makeStyles } from '@material-ui/styles';\n\nconst breakpoint = { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 };\n\nconst style = makeStyles({\n  minimizedScreen: {\n    width: '40%',\n    [`@media (max-width:${breakpoint['md']}px)`]: {\n      width: '60%',\n    },\n    [`@media (max-width:${breakpoint['sm']}px)`]: {\n      width: '70%',\n    },\n  },\n  activeWindow: {\n    zIndex: 1,\n  },\n  maximizedScreen: {\n    width: '100%',\n    height: '100%',\n    transform: 'translate(0px, 0px)!important',\n  },\n  headerArea: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    cursor: 'move',\n  },\n  actionButtons: {\n    margin: '1px 2px',\n    fontWeight: 'bold',\n    transform: 'translateY(-1px)',\n  },\n  boldText: {\n    fontWeight: 600,\n  },\n  descriptionArea: {\n    marginLeft: '5px',\n    marginBottom: '5px',\n  },\n  titleArea: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  title: {\n    fontSize: 22,\n    fontWeight: 700,\n    marginRight: 20,\n  },\n  subtitle: {\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  explanationArea: {\n    marginTop: 10,\n    display: 'block',\n    marginLeft: '10%',\n    marginRight: '10%',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n    Anchor,\n    Button,\n    Checkbox,\n    Cutout,\n    Divider,\n    Fieldset,\n    Tab,\n    Tabs,\n    TabBody,\n    Window,\n    WindowContent,\n    WindowHeader,\n} from 'react95';\nimport Draggable from 'react-draggable';\n\nimport style from './style';\n\nimport LogoIcon from '../../components/LogoIcon';\n\nimport { windowAction } from '../../actions';\nimport { utils } from '../../constants';\nimport { windowSelector } from '../../selectors';\n\nconst ExperienceWindow = (props) => {\n    const {\n        setExperienceWindowVisibility,\n        setExperienceWindowMinimize,\n        setActiveWindow,\n        minimizeAllExcept,\n        minimizeExperienceWindow,\n        showExperienceWindow,\n        activeWindow,\n    } = props;\n\n    const classes = style();\n\n    const [fullWindow, setFullWindow] = React.useState(false);\n    const [activeTab, setActiveTab] = React.useState(1);\n\n    return (\n        <>\n            {!minimizeExperienceWindow && showExperienceWindow && (\n                <Draggable\n                    defaultClassName={clsx(\n                        activeWindow === utils.WINDOW_NAME.EXPERIENCE &&\n                            classes.activeWindow\n                    )}\n                    bounds=\"parent\"\n                    handle=\"header\"\n                    defaultPosition={{ x: -20, y: 70 }}\n                >\n                    <Window\n                        className={clsx(\n                            fullWindow\n                                ? classes.maximizedScreen\n                                : classes.minimizedScreen\n                        )}\n                        onClick={() =>\n                            setActiveWindow(utils.WINDOW_NAME.EXPERIENCE)\n                        }\n                    >\n                        <header>\n                            <WindowHeader className={classes.headerArea}>\n                                <div>\n                                    <span>experience.exe</span>\n                                </div>\n                                <div>\n                                    <Button\n                                        className={classes.actionButtons}\n                                        size={'sm'}\n                                        square\n                                        onClick={() =>\n                                            setExperienceWindowMinimize(\n                                                !minimizeExperienceWindow\n                                            )\n                                        }\n                                    >\n                                        <span>-</span>\n                                    </Button>\n                                    <Button\n                                        className={classes.actionButtons}\n                                        size={'sm'}\n                                        square\n                                        onClick={() => {\n                                            minimizeAllExcept(\n                                                utils.WINDOW_VARIABLES\n                                                    .EXPERIENCE\n                                            );\n                                            setFullWindow(!fullWindow);\n                                            return;\n                                        }}\n                                    >\n                                        <span>□</span>\n                                    </Button>\n                                    <Button\n                                        className={classes.actionButtons}\n                                        size={'sm'}\n                                        square\n                                        onClick={() =>\n                                            setExperienceWindowVisibility(false)\n                                        }\n                                    >\n                                        <span>x</span>\n                                    </Button>\n                                </div>\n                            </WindowHeader>\n                        </header>\n\n                        <WindowContent>\n                            <Tabs\n                                value={activeTab}\n                                onChange={(value) => setActiveTab(value)}\n                            >\n                                <Tab\n                                    className={clsx(\n                                        activeTab === 1 && classes.boldText\n                                    )}\n                                    value={1}\n                                >\n                                    Recruiterbox\n                                </Tab>\n                                <Tab\n                                    className={clsx(\n                                        activeTab === 2 && classes.boldText\n                                    )}\n                                    value={2}\n                                >\n                                    Basis\n                                </Tab>\n                                <Tab\n                                    className={clsx(\n                                        activeTab === 3 && classes.boldText\n                                    )}\n                                    value={3}\n                                >\n                                    QBurst\n                                </Tab>\n                                <Tab\n                                    className={clsx(\n                                        activeTab === 4 && classes.boldText\n                                    )}\n                                    value={4}\n                                >\n                                    HashInfinity\n                                </Tab>\n                            </Tabs>\n                            {activeTab === 1 ? (\n                                <TabBody>\n                                    <Recruiterbox />\n                                </TabBody>\n                            ) : activeTab === 2 ? (\n                                <TabBody>\n                                    <Basis />\n                                </TabBody>\n                            ) : activeTab === 3 ? (\n                                <TabBody>\n                                    <QBurst />\n                                </TabBody>\n                            ) : (\n                                <TabBody>\n                                    <HashInfinity />\n                                </TabBody>\n                            )}\n                        </WindowContent>\n                    </Window>\n                </Draggable>\n            )}\n        </>\n    );\n};\n\nconst Recruiterbox = () => {\n    const classes = style();\n\n    return (\n        <Cutout>\n            <Fieldset className={classes.descriptionArea}>\n                <div className={classes.titleArea}>\n                    <h1 className={classes.title}>Applied Training</h1>\n                    <Button square>\n                        <Anchor href=\"https://appliedtraining.com/\" target=\"_blank\">\n                            <LogoIcon image=\"/icons/internet.png\" alt=\"\" size={30} />\n                        </Anchor>\n                    </Button>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <LogoIcon image=\"/icons/computer.png\" alt=\"\" />\n                    <h2 className={classes.subtitle}>Full Stack Engineer</h2>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <h3 className={classes.subtitle}>April 2020 - Present</h3>\n                </div>\n\n                <Divider />\n\n                <div className={classes.explanationArea}>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Working on integrating multiple business verticals under a singlehood.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Building applicant tracking and performance management platform.\"\n                            value=\"-\"\n                        />\n                    </div>\n                </div>\n            </Fieldset>\n        </Cutout>\n    );\n};\n\nconst Basis = () => {\n    const classes = style();\n\n    return (\n        <Cutout>\n            <Fieldset className={classes.descriptionArea}>\n                <div className={classes.titleArea}>\n                    <h1 className={classes.title}>BASIS</h1>\n                    <Button square>\n                        <Anchor href=\"https://getbasis.co\" target=\"_blank\">\n                            <LogoIcon image=\"/icons/internet.png\" alt=\"\" size={30} />\n                        </Anchor>\n                    </Button>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <LogoIcon image=\"/icons/computer.png\" alt=\"\" />\n                    <h2 className={classes.subtitle}>Full Stack Engineer</h2>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <h3 className={classes.subtitle}>\n                        August 2018 - March 2020\n                    </h3>\n                </div>\n\n                <Divider />\n\n                <div className={classes.explanationArea}>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Lead Backend Engineering and Web development.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Built online Direct Mutual Fund Investment Platform.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Built in-app community and card based learning modules\"\n                            value=\"-\"\n                        />\n                    </div>\n                </div>\n            </Fieldset>\n        </Cutout>\n    );\n};\n\nconst QBurst = () => {\n    const classes = style();\n\n    return (\n        <Cutout>\n            <Fieldset className={classes.descriptionArea}>\n                <div className={classes.titleArea}>\n                    <h1 className={classes.title}>QBURST</h1>\n                    <Button square>\n                        <Anchor href=\"https://qburst.com\" target=\"_blank\">\n                            <LogoIcon image=\"/icons/internet.png\" alt=\"\" size={30} />\n                        </Anchor>\n                    </Button>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <LogoIcon image=\"/icons/computer.png\" alt=\"\" />\n                    <h2 className={classes.subtitle}>Full Stack Engineer</h2>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <h3 className={classes.subtitle}>\n                        August 2016 - August 2018\n                    </h3>\n                </div>\n\n                <Divider />\n\n                <div className={classes.explanationArea}>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Worked as full stack developer.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Built Chatbots using IBM Watson and Amazon Lex.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Built an open-source library Fubar Charts\"\n                            value=\"-\"\n                        />\n                    </div>\n                </div>\n            </Fieldset>\n        </Cutout>\n    );\n};\n\nconst HashInfinity = () => {\n    const classes = style();\n\n    return (\n        <Cutout>\n            <Fieldset className={classes.descriptionArea}>\n                <div className={classes.titleArea}>\n                    <h1 className={classes.title}>HASHINFINITY</h1>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <LogoIcon image=\"/icons/computer.png\" alt=\"\" />\n                    <h2 className={classes.subtitle}>Cofounder, Engineer</h2>\n                </div>\n\n                <div className={classes.titleArea}>\n                    <h3 className={classes.subtitle}>\n                        June 2015 - August 2016\n                    </h3>\n                </div>\n\n                <Divider />\n\n                <div className={classes.explanationArea}>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Built - castNcrew - LinkedIn for Advertisement Industry.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Worked as Designer and Engineer.\"\n                            value=\"-\"\n                        />\n                    </div>\n                    <div>\n                        <Checkbox\n                            readOnly\n                            checked\n                            label=\"Shutdown August 2016\"\n                            value=\"-\"\n                        />\n                    </div>\n                </div>\n            </Fieldset>\n        </Cutout>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    activeWindow: windowSelector.getActiveWindow(),\n    showExperienceWindow: windowSelector.showExperienceWindow(),\n    minimizeExperienceWindow: windowSelector.minimizeExperienceWindow(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    setExperienceWindowVisibility: (isVisible) => {\n        return dispatch(windowAction.setExperienceWindowVisibility(isVisible));\n    },\n    setExperienceWindowMinimize: (isMinimized) => {\n        return dispatch(windowAction.setExperienceWindowMinimize(isMinimized));\n    },\n    setActiveWindow: (window) => {\n        return dispatch(windowAction.setActiveWindow(window));\n    },\n    minimizeAllExcept: (windowName) => {\n        return dispatch(windowAction.minimizeAllExcept(windowName));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExperienceWindow);\n","import { makeStyles } from '@material-ui/styles';\n\nconst breakpoint = { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 };\n\nconst style = makeStyles({\n  screen: {\n    width: '30%',\n    [`@media (max-width:${breakpoint['md']}px)`]: {\n      width: '50%',\n    },\n    [`@media (max-width:${breakpoint['sm']}px)`]: {\n      width: '60%',\n    },\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButton: {\n    margin: '1px 2px',\n    fontWeight: 'bold',\n    transform: 'translateY(-1px)',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  action: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport { Button, Window, WindowContent, WindowHeader } from 'react95';\n\nimport style from './style';\n\nimport LogoIcon from '../LogoIcon';\n\nconst Popup = props => {\n  const { title, image, action, handleClose } = props;\n\n  const classes = style();\n\n  return (\n    <>\n      <Window className={classes.screen}>\n        <WindowHeader className={classes.header}>\n          <span>Shut Down Windows</span>\n          <Button\n            className={classes.headerButton}\n            size={'sm'}\n            square\n            onClick={handleClose}\n          >\n            <span>x</span>\n          </Button>\n        </WindowHeader>\n        <WindowContent>\n          <div className={classes.content}>\n            <LogoIcon image={image} alt=\"\" size={40} />\n            <span>{title}</span>\n          </div>\n          <div className={classes.action}>{action}</div>\n        </WindowContent>\n      </Window>\n      ;\n    </>\n  );\n};\n\nexport default Popup;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Button, Hourglass } from 'react95';\n\nimport Popup from '../../components/Popup';\n\nimport { windowAction } from '../../actions';\nimport { windowSelector } from '../../selectors';\n\nconst ShutdownPopup = props => {\n  const { showShutdownPopup, setShutdownPopupVisibility } = props;\n  const [shutdown, setShowDown] = React.useState(false);\n\n  const shutdownAction = (\n    <>\n      <Button\n        style={{ margin: 5 }}\n        onClick={() => {\n          setShowDown(true);\n          setTimeout(() => {\n            window.open('about:blank', '_self');\n            window.close();\n          }, 3000);\n        }}\n      >\n        Yes\n      </Button>\n      <Button\n        style={{ margin: 5 }}\n        onClick={() => setShutdownPopupVisibility(false)}\n      >\n        Cancel\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      {showShutdownPopup &&\n        (shutdown ? (\n          <Hourglass style={{ padding: '20% 0' }} />\n        ) : (\n          <Popup\n            title=\"Are you sure you want to shutdown the Window?\"\n            image=\"/icons/shutdown-computer.png\"\n            action={shutdownAction}\n            handleClose={() => setShutdownPopupVisibility(false)}\n          />\n        ))}\n    </>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  showShutdownPopup: windowSelector.showShutdownPopup(),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setShutdownPopupVisibility: isVisible => {\n    return dispatch(windowAction.setShutdownPopupVisibility(isVisible));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShutdownPopup);\n","import React, { Component } from 'react';\n\nimport AboutMeWindow from '../AboutMeWindow';\nimport ExperienceWindow from '../ExperienceWindow';\nimport ShutdownPopup from '../ShutdownPopup';\n\nimport style from './style';\n\nclass MainScreen extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <div className={classes.mainScreen}>\n          <ExperienceWindow />\n          <AboutMeWindow />\n          <ShutdownPopup />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default style(MainScreen);\n","import { withStyles } from '@material-ui/styles';\n\nconst style = withStyles({\n  mainScreen: {\n    width: '100%',\n    height: '100vh',\n    background: 'teal',\n    position: 'relative',\n    textAlign: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\n\nimport StartBar from '../../components/StartBar';\n\nimport MainScreen from '../../containers/MainScreen';\n\nclass IndexPage extends Component {\n  render() {\n    return (\n      <>\n        <MainScreen />\n        <StartBar />\n      </>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport { themes } from 'react95';\n\nimport reduxStore from './utils/store';\nimport GlobalStyle from './utils/style';\n\nimport IndexPage from './pages/IndexPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={reduxStore}>\n        <GlobalStyle />\n        <ThemeProvider theme={themes.default}>\n          <>\n            <IndexPage />\n          </>\n        </ThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}